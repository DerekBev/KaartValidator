meta
{
  title: "Road Ref Validations";
  description: "Check for road ref inconsistencies";
  author: "Taylor Smock";
  min-josm-version: "15282";
  version: "7_2020-01-15";
}
@supports (min-josm-version: 15323) {
  /* Check for ways that don't have the parent relation ref */
  relation[type=route][route=road][ref] > way[ref][!regexp_test(concat("^(", join_list("|", uniq_list(split(";", join(";", tag_regex("ref"))))), "|;?)+$"), join_list(";", uniq_list(sort_list(parent_tags("ref")))), "i")] {
    group: tr("kaart-experimental");
    throwWarning: tr("Parent ref not in child ref");
    set .parent_ref_not_in_child_ref;
  }

  /* Check for ways that have a ref that is not in a parent */
  way[highway][ref][count(parent_tags("ref")) != 0 && !regexp_test(join_list(";", uniq_list(sort_list(split(";", join_list(";", tag_regex("^(ref|nat_ref|int_ref|reg_ref)$")))))), join_list(";", uniq_list(sort_list(parent_tags("ref")))), "i")]!.parent_ref_not_in_child_ref {
    group: tr("kaart-experimental");
    throwWarning: tr("A {0} on a way is not in a parent relation", "ref");
    set .ref_not_in_relation
  }
}
