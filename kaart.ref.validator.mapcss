meta
{
  title: "Road Ref Validations";
  version: "1_2019-08-05";
  description: "Check for road ref inconsistencies";
  author: "Taylor Smock";
  min-josm-version: "15282";
}
@supports (min-josm-version: 15281) {
  /* Check for ways that don't have the parent relation ref */
  relation[type=route][ref] > way[ref][!regexp_test(concat("^(", join_list("|", split(";", join(";", tag("ref"), tag("int_ref"), tag("nat_ref")))), "|;?)+$"), join_list(";", sort_list(parent_tags("ref"))))] {
  /* We don't (currently) care about ways that are missing refs */
  /* relation[type=route][ref] > way[!ref] { */
    group: tr("kaart");
    throwError: tr("Parent ref not in child ref");
    set .parent_ref_not_in_child_ref;
  }

  /* Check for ways that have a ref that is not in a parent */
  /* Needs sort to work properly */
  way[highway][ref][!int_ref][count(parent_tags("ref")) != 0 && join_list(";", sort_list(split(";", tag("ref")))) != join_list(";", sort_list(parent_tags("ref")))]!.parent_ref_not_in_child_ref,
  way[highway][ref][int_ref][count(parent_tags("ref")) != 0 && join_list(";", sort_list(split(";", join(";", tag("ref"), tag("int_ref"))))) != join_list(";", sort_list(parent_tags("ref")))]!.parent_ref_not_in_child_ref {
    group: tr("kaart");
    throwError: tr("A {0} on a way is not in a parent relation", "ref");
  }
}
