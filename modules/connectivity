/********************************
 * Connectivity relation checks *
 ********************************
relation[type=connectivity][/connectivity/!~/^([0-9]:([0-9],?)[|$]?)+/] {
  throwError: tr("{0} should not have multiple from lanes in the same statement or is otherwise malformed", "{0.key}");
  assertMatch: "relation type=connectivity connectivity=\"1,2:3|2:4\"";
  assertNoMatch: "relation type=connectivity connectivity=\"1:3|2:4\"";
  assertMatch: "relation type=connectivity connectivity=\" 1:1|2:2|3:3\"";
  assertNoMatch: "relation type=connectivity connectivity=\"1:1|2:2|3:3\"";
}

relation[type=connectivity][connectivity][regexp_test("^(([0-9]):\\2(\\|?))+$", tag("connectivity"), "(?i)")] {
  throwError: tr("{0} is redundant and unnecessary, since it is a simple case", "{0.key}");
  assertMatch: "relation type=connectivity connectivity=\"1:1|2:2|3:3\"";
  assertNoMatch: "relation type=connectivity connectivity=\"1:1|2:2|3:2\"";
}

/** TODO list
 * 1) Count max lanes with :lanes suffix
 * 2) Ensure that the traffic can actually go into the lanes (check for hgv:lanes=no|yes|no and hgv:lanes=no|no|yes with connectivity=1:1|2:2|3:3)
 * 3) Get splitting ways for this relation in JOSM working properly (src/org/openstreetmap/josm/command/SplitWayCommand.java +313)
 */
